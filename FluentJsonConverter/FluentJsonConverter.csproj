<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <!-- 👇 Source generators must target netstandard 2.0 -->
        <TargetFramework>netstandard2.0</TargetFramework>
        <!-- 👇 We don't want to reference the source generator dll directly in consuming projects -->
        <IncludeBuildOutput>false</IncludeBuildOutput>
        <!-- 👇 New project, why not! -->
        <Nullable>enable</Nullable>
        <ImplicitUsings>true</ImplicitUsings>
        <LangVersion>Latest</LangVersion>
        <IsRoslynComponent>true</IsRoslynComponent>
    </PropertyGroup>

    <ItemGroup>
        <!-- Roslyn Analyzers and Code Analysis dependencies -->
        <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.12.0" PrivateAssets="all" />
        <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="3.11.0" PrivateAssets="all" />
        <PackageReference Include="Microsoft.CodeAnalysis.Workspaces.Common" Version="4.12.0" />
        <PackageReference Include="Microsoft.CodeAnalysis.CSharp.Workspaces" Version="4.12.0" />

		<PackageReference Include="System.Text.Json" Version="9.0.0" />
    </ItemGroup>

    <!-- This ensures the library will be packaged as a source generator when we use `dotnet pack` -->
    <ItemGroup>
        <None Include="$(OutputPath)\$(AssemblyName).dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />
    </ItemGroup>
    <ItemGroup>
      <Compile Update="Properties\Resources.Designer.cs">
        <DesignTime>True</DesignTime>
        <AutoGen>True</AutoGen>
        <DependentUpon>Resources.resx</DependentUpon>
      </Compile>
    </ItemGroup>
    <ItemGroup>
      <EmbeddedResource Update="Properties\Resources.resx">
        <Generator>ResXFileCodeGenerator</Generator>
        <LastGenOutput>Resources.Designer.cs</LastGenOutput>
      </EmbeddedResource>
    </ItemGroup>
    
</Project>
