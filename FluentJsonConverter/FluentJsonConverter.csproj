<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
	    <TargetFramework>netstandard2.0</TargetFramework> <!-- Required for source generators -->
	    <IncludeBuildOutput>false</IncludeBuildOutput> <!-- Prevents consumers from referencing the DLL -->
	    <IsRoslynComponent>true</IsRoslynComponent> <!-- Marks it as a Roslyn component -->
	    <GeneratePackageOnBuild>true</GeneratePackageOnBuild> <!-- Automatically creates a package on build -->
	    <Nullable>enable</Nullable>
	    <LangVersion>Latest</LangVersion>
        <ImplicitUsings>true</ImplicitUsings>
    </PropertyGroup>

	<PropertyGroup>
		<!-- NuGet Metadata -->
		<PackageId>FluentJsonConverter</PackageId>
		<Version>1.0.0</Version>
		<Authors>Bernhard Windisch</Authors>
		<Description>A powerful source generator for configuring custom serialization rules for JSON properties using a fluent API. Supports default, custom converters, and inline logic.</Description>
		<PackageTags>SourceGenerator;CSharp</PackageTags>
		<PackageLicenseExpression>MIT</PackageLicenseExpression>
		<RepositoryUrl>https://github.com/windischb/FluentJsonConverter</RepositoryUrl>
		<PackageProjectUrl>https://github.com/windischb/FluentJsonConverter</PackageProjectUrl>
	</PropertyGroup>

    <ItemGroup>
        <!-- Roslyn Analyzers and Code Analysis dependencies -->
        <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.12.0" PrivateAssets="all" />
        <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="3.11.0" PrivateAssets="all" />
		<PackageReference Include="System.Text.Json" Version="9.0.0" />
    </ItemGroup>

    <!-- This ensures the library will be packaged as a source generator when we use `dotnet pack` -->
    <ItemGroup>
        <None Include="$(OutputPath)\$(AssemblyName).dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />
    </ItemGroup>
    
</Project>
